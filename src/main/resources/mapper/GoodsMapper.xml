<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyan.mapper.GoodsMapper">

    <!--原表查询-->
    <resultMap id="BaseResultMap" type="com.cyan.pojo.Goods">
        <!--column查表返回字段名,jdbcType数据库字段属性类型,property实体类成员属性-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="image1" jdbcType="VARCHAR" property="image1"/>
        <result column="image2" jdbcType="VARCHAR" property="image2"/>
        <result column="price" jdbcType="FLOAT" property="price"/>
        <result column="intro" jdbcType="VARCHAR" property="intro"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <association property="type" javaType="com.cyan.pojo.Type">
            <id column="type_id" jdbcType="INTEGER" property="id"/>
            <result column="type_name" jdbcType="VARCHAR" property="name"/>
        </association>
    </resultMap>

    <!--&lt;!&ndash;关联Type表查询&ndash;&gt;
    <resultMap id="goodsResultMap" type="Goods">
        &lt;!&ndash;column查表返回字段名,jdbcType数据库字段属性类型,property实体类成员属性&ndash;&gt;
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="image1" jdbcType="VARCHAR" property="image1"/>
        <result column="image2" jdbcType="VARCHAR" property="image2"/>
        <result column="price" jdbcType="FLOAT" property="price"/>
        <result column="intro" jdbcType="VARCHAR" property="intro"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <association property="type" javaType="com.cyan.pojo.Type">
            <id column="type_id" jdbcType="INTEGER" property="id" />
            <result column="type_name" jdbcType="VARCHAR" property="name" />
        </association>
    </resultMap>-->

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, cover, image1, image2, price, intro, stock, type_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select g.id, g.name, g.cover, g.image1, g.image2, g.price, g.intro, g.stock, g.type_id, t.name type_name
        from goods g
        LEFT JOIN type t ON g.type_id = t.id
        where g.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goods" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goods (`name`, cover, image1,
        image2, price, intro,
        stock, type_id)
        values (#{name,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{image1,jdbcType=VARCHAR},
        #{image2,jdbcType=VARCHAR}, #{price,jdbcType=FLOAT}, #{intro,jdbcType=VARCHAR},
        #{stock,jdbcType=INTEGER}, #{type.id,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goods"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="cover != null">
                cover,
            </if>
            <if test="image1 != null">
                image1,
            </if>
            <if test="image2 != null">
                image2,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="intro != null">
                intro,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="type.id != null">
                type_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
            <if test="image1 != null">
                #{image1,jdbcType=VARCHAR},
            </if>
            <if test="image2 != null">
                #{image2,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=FLOAT},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="type.id != null">
                #{type.id,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cyan.pojo.Goods">
        <!--@mbg.generated-->
        update goods
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="image1 != null">
                image1 = #{image1,jdbcType=VARCHAR},
            </if>
            <if test="image2 != null">
                image2 = #{image2,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=FLOAT},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="type.id != null">
                type_id = #{type.id,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cyan.pojo.Goods">
        <!--@mbg.generated-->
        update goods
        set `name` = #{name,jdbcType=VARCHAR},
        cover = #{cover,jdbcType=VARCHAR},
        image1 = #{image1,jdbcType=VARCHAR},
        image2 = #{image2,jdbcType=VARCHAR},
        price = #{price,jdbcType=FLOAT},
        intro = #{intro,jdbcType=VARCHAR},
        stock = #{stock,jdbcType=INTEGER},
        type_id = #{type.id,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update goods
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="cover = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.cover,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="image1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.image1,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="image2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.image2,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="price = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.price,jdbcType=FLOAT}
                </foreach>
            </trim>
            <trim prefix="intro = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.intro,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="stock = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.stock,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="type_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.type.id,jdbcType=INTEGER}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update goods
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="`name` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.name != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="cover = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.cover != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.cover,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="image1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.image1 != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.image1,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="image2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.image2 != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.image2,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="price = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.price != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.price,jdbcType=FLOAT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="intro = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.intro != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.intro,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="stock = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.stock != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.stock,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="type_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.type.id != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.type.id,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goods
        (`name`, cover, image1, image2, price, intro, stock, type_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.name,jdbcType=VARCHAR}, #{item.cover,jdbcType=VARCHAR}, #{item.image1,jdbcType=VARCHAR},
            #{item.image2,jdbcType=VARCHAR}, #{item.price,jdbcType=FLOAT}, #{item.intro,jdbcType=VARCHAR},
            #{item.stock,jdbcType=INTEGER}, #{item.type.id,jdbcType=INTEGER})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goods"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            `name`,
            cover,
            image1,
            image2,
            price,
            intro,
            stock,
            type_id,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            #{name,jdbcType=VARCHAR},
            #{cover,jdbcType=VARCHAR},
            #{image1,jdbcType=VARCHAR},
            #{image2,jdbcType=VARCHAR},
            #{price,jdbcType=FLOAT},
            #{intro,jdbcType=VARCHAR},
            #{stock,jdbcType=INTEGER},
            #{type.id,jdbcType=INTEGER},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
            `name` = #{name,jdbcType=VARCHAR},
            cover = #{cover,jdbcType=VARCHAR},
            image1 = #{image1,jdbcType=VARCHAR},
            image2 = #{image2,jdbcType=VARCHAR},
            price = #{price,jdbcType=FLOAT},
            intro = #{intro,jdbcType=VARCHAR},
            stock = #{stock,jdbcType=INTEGER},
            type_id = #{type.id,jdbcType=INTEGER},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goods"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="cover != null">
                cover,
            </if>
            <if test="image1 != null">
                image1,
            </if>
            <if test="image2 != null">
                image2,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="intro != null">
                intro,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="type.id != null">
                type_id,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
            <if test="image1 != null">
                #{image1,jdbcType=VARCHAR},
            </if>
            <if test="image2 != null">
                #{image2,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=FLOAT},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="type.id != null">
                #{type.id,jdbcType=INTEGER},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="image1 != null">
                image1 = #{image1,jdbcType=VARCHAR},
            </if>
            <if test="image2 != null">
                image2 = #{image2,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=FLOAT},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="type.id != null">
                type_id = #{type.id,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!--LEFT JOIN 连表查询-->
    <select id="selectByRecommendIds" parameterType="List" resultMap="BaseResultMap">
        SELECT g.id, g.name, g.cover, g.image1, g.image2, g.price, g.intro, g.stock, g.type_id, t.name type_name
        FROM goods g
        LEFT JOIN type t ON g.type_id = t.id
        WHERE g.id
        IN(
        <foreach collection="list" index="index" item="recommend" separator=",">
            #{recommend.goodsId,jdbcType=INTEGER}
        </foreach>
        )
    </select>

    <!--LEFT JOIN 连表查询-->
    <select id="selectByRecommendId" parameterType="Recommend" resultMap="BaseResultMap">
        SELECT g.id, g.name, g.cover, g.image1, g.image2, g.price, g.intro, g.stock, g.type_id, t.name type_name
        FROM goods g
        LEFT JOIN type t ON g.type_id = t.id
        WHERE g.id = #{recommend.goodsId}
    </select>

    <!--根据表字段name模糊查询-->
    <select id="getSearchGoods" parameterType="String" resultMap="BaseResultMap">
        SELECT id,name,cover,price
        FROM goods
        WHERE name LIKE '%${searchName}%'
    </select>

    <!--根据类目ID查询商品-->
    <select id="selectByTypeId" parameterType="Integer" resultMap="BaseResultMap">
        SELECT *
        FROM goods
        <if test="typeId != null and !typeId.equals(0)">
            WHERE type_id = #{typeId}
        </if>
    </select>

    <!--根据Recommend推荐表查询 - type(0-所有 1-条幅/1-热销/2-新品)-->
    <select id="selectByRecommendType" parameterType="Integer" resultMap="BaseResultMap">
        SELECT g.id, g.name, g.cover, g.image1, g.image2, g.price, g.intro, g.stock, g.type_id, t.name type_name
        FROM goods g,type t,recommend r
        WHERE g.type_id = t.id
        <if test="type != null and type > 0">
            AND g.id = r.goods_id AND r.type = #{type}
        </if>
    </select>
</mapper>