<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyan.mapper.GoodsrecordsMapper">
    <resultMap id="BaseResultMap" type="com.cyan.pojo.Goodsrecords">
        <!--@mbg.generated-->
        <!--@Table goodsrecords-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, goods_id, user_id, `count`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from goodsrecords
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete from goodsrecords
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goodsrecords"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goodsrecords (goods_id, user_id, `count`
        )
        values (#{goodsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goodsrecords"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goodsrecords
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="count != null">
                `count`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cyan.pojo.Goodsrecords">
        <!--@mbg.generated-->
        update goodsrecords
        <set>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                `count` = #{count,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cyan.pojo.Goodsrecords">
        <!--@mbg.generated-->
        update goodsrecords
        set goods_id = #{goodsId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        `count` = #{count,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update goodsrecords
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="goods_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.goodsId,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="`count` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=INTEGER} then #{item.count,jdbcType=INTEGER}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update goodsrecords
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="goods_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.goodsId != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.goodsId,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.userId != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`count` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.count != null">
                        when id = #{item.id,jdbcType=INTEGER} then #{item.count,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goodsrecords
        (goods_id, user_id, `count`)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.goodsId,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.count,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goodsrecords"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goodsrecords
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            goods_id,
            user_id,
            `count`,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            #{goodsId,jdbcType=INTEGER},
            #{userId,jdbcType=INTEGER},
            #{count,jdbcType=INTEGER},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
            goods_id = #{goodsId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER},
            `count` = #{count,jdbcType=INTEGER},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.cyan.pojo.Goodsrecords"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into goodsrecords
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="count != null">
                `count`,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                `count` = #{count,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!--根据用户和商品查询浏览表-->
    <select id="selectByUserIDGoodsID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goodsrecords
        where user_id = #{userid,jdbcType=INTEGER} and goods_id = #{goodsid,jdbcType=INTEGER}
    </select>

    <!--根据用户查询浏览表-->
    <select id="selectByUserID" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM goodsrecords
        WHERE user_id = #{userid,jdbcType=INTEGER}
        ORDER BY count DESC LIMIT #{limitSize};
    </select>

</mapper>